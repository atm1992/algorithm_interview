# -*- coding: UTF-8 -*-
"""
变态跳台阶。
一只青蛙一次可以跳上1级台阶，也可以跳上2级……它也可以跳上n级。求该青蛙跳上一个n级的台阶总共有多少种跳法。
问题分析：
f(n) = f(n-1) + f(n-2) + …… + f(1) + f(0)
f(n-1) = f(n-2) + f(n-3) + …… + f(1) + f(0)
……
其中，f(n-1)表示第一步跳1级之后的步数，f(n-2)表示第一步跳2级之后的步数 ……
f(1)表示第一步跳n-1级之后的步数（只剩1级台阶了），因此 f(1) = 1
f(0)表示第一步跳n级之后的步数（剩余0级台阶了），因此 f(0) = 0
由上可知，f(n) = f(n-1) + (f(n-2) + …… + f(1) + f(0)) = f(n-1) + f(n-1) = 2*f(n-1) = 2^(n-1) * f(n - (n-1)) = 2^(n-1)
"""


def jumpFloorII(number):
    """根据数学推导，直接返回结果。"""
    if number < 1:
        return 0
    return 2 ** (number - 1)
